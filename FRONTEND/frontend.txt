home.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NANSAT - Satellite Intelligence</title>
    <!-- Google Fonts: Orbitron for headings, Inter for body text -->
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;600;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <!-- Tailwind CSS via CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            /* Muted, professional dark theme */
            --bg-color-start: #0a081a;
            --bg-color-end: #1a1631;
            --card-bg-dark: rgba(34, 30, 63, 0.7); /* Semi-transparent */
            --text-light: #d8d6ff;
            --primary-color: #00e0e0; /* Muted Cyan */
            --accent-purple: #9d25c1; /* Muted Magenta */
            --accent-glow: #e21ad8; /* For subtle glow effects */
        }
        
        body {
            font-family: 'Inter', sans-serif;
            color: var(--text-light);
            min-height: 100vh;
            position: relative;
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            transition: background-image 1s ease-in-out;
        }

        /* Background Images for each page */
        .bg-home {
            background-image: url('http://googleusercontent.com/file_content/uploaded:image_655ac0.jpg-8ed9fb51-5289-4477-bded-36d206b2ce4d');
        }
        .bg-dashboard {
            background-image: url('http://googleusercontent.com/file_content/uploaded:image_655a0a.jpg-f817068c-4842-43ad-8c3e-1f01e206a9e4');
        }
        .bg-before-after {
            background-image: url('http://googleusercontent.com/file_content/uploaded:image_655a26.jpg-e53a8792-f39c-45ca-b8bb-88c74cd1b995');
        }
        .bg-map-analysis {
            background-image: url('http://googleusercontent.com/file_content/uploaded:image_655a67.jpg-9ad605f9-cc02-447d-ba65-048e247b9a78');
        }
        .bg-about {
            background-image: url('https://placehold.co/1920x1080/0d0e2e/e0e0e0?text=About+Page+Background');
        }
        
        /* Dark overlay for better text readability */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 1;
        }

        /* Set a higher z-index for all main content */
        header, .page-content {
            position: relative;
            z-index: 10;
        }
        
        /* Custom scrollbar for webkit browsers */
        ::-webkit-scrollbar {
            height: 8px;
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(34, 30, 63, 0.7);
            border-radius: 9999px;
        }

        ::-webkit-scrollbar-thumb {
            background-color: var(--primary-color);
            border-radius: 9999px;
            border: 2px solid rgba(34, 30, 63, 0.7);
        }

        .gradient-text {
            background: linear-gradient(45deg, var(--primary-color), var(--accent-purple));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .gradient-button {
            background: linear-gradient(45deg, var(--primary-color), var(--accent-purple));
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0, 224, 224, 0.2);
        }
        .gradient-button:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 6px 15px rgba(0, 224, 224, 0.4);
        }
        
        .card {
            background: rgba(34, 30, 63, 0.7);
            backdrop-filter: blur(8px);
            border: 1px solid var(--accent-purple);
            box-shadow: 0 0 20px rgba(157, 37, 193, 0.3);
            transition: all 0.3s ease;
        }

        .card:hover {
            box-shadow: 0 0 30px rgba(157, 37, 193, 0.5), 0 0 10px rgba(0, 224, 224, 0.5);
        }

        .feature-item {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }
        .feature-icon {
            width: 24px;
            height: 24px;
            min-width: 24px;
            min-height: 24px;
            background-color: var(--primary-color);
            mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='currentColor'%3E%3Cpath d='M9 16.17l-4.17-4.17L3.5 13.5l5.5 5.5 12-12-1.41-1.41z'/%3E%3C/svg%3E");
            mask-size: cover;
            mask-repeat: no-repeat;
            -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='currentColor'%3E%3Cpath d='M9 16.17l-4.17-4.17L3.5 13.5l5.5 5.5 12-12-1.41-1.41z'/%3E%3C/svg%3E");
            -webkit-mask-size: cover;
            -webkit-mask-repeat: no-repeat;
            margin-right: 1rem;
        }

        /* Hide all pages by default */
        .page-content {
            display: none;
        }

        /* Show the active page */
        .page-content.active {
            display: block;
        }

        /* Navigation link hover effect */
        .nav-link-hover:hover {
            background-color: rgba(255, 255, 255, 0.1);
            transform: scale(1.05);
            transition: all 0.2s ease-in-out;
        }
    </style>
</head>
<body class="antialiased bg-home">

    <!-- Header Navigation -->
    <header class="py-4 px-6 md:px-12 flex justify-between items-center bg-gray-900 bg-opacity-30 backdrop-filter backdrop-blur-sm shadow-lg sticky top-0 z-50">
        <!-- Logo -->
        <div class="flex items-center space-x-2">
            <!-- Icon placeholder -->
            <div class="w-8 h-8 rounded-full bg-primary-color flex items-center justify-center font-bold text-gray-900 font-orbitron">N</div>
            <span class="text-2xl font-bold font-orbitron text-white">NanSat</span>
        </div>
        
        <!-- Navigation Links -->
        <nav class="hidden md:flex space-x-8">
            <a href="#" onclick="showPage('homepage')" class="text-white hover:text-primary-color transition-colors duration-300 font-semibold nav-link-hover">Home</a>
            <a href="#" onclick="showPage('dashboard-page')" class="text-white hover:text-primary-color transition-colors duration-300 font-semibold nav-link-hover">Dashboard</a>
            <a href="#" onclick="showPage('before-after-page')" class="text-white hover:text-primary-color transition-colors duration-300 font-semibold nav-link-hover">Before/After</a>
            <a href="#" onclick="showPage('map-analysis-page')" class="text-white hover:text-primary-color transition-colors duration-300 font-semibold nav-link-hover">Map Analysis</a>
            <a href="#" onclick="showPage('about-page')" class="text-white hover:text-primary-color transition-colors duration-300 font-semibold nav-link-hover">About</a>
        </nav>

        <!-- Right side user/login info -->
        <div class="hidden md:flex items-center space-x-4">
            <a href="#" class="text-sm font-semibold text-white hover:text-primary-color transition-colors duration-300">khushiarora0606</a>
        </div>
    </header>

    <!-- Main Content Container -->
    <div id="page-container">

        <!-- Home Page Content -->
        <main id="homepage" class="page-content active container mx-auto px-4 md:px-0 py-16 flex flex-col items-center text-center">
            <!-- Hero Section -->
            <div class="max-w-4xl mx-auto mb-16">
                <h1 class="text-5xl md:text-6xl font-bold font-orbitron leading-tight mb-4">
                    Satellite Intelligence
                    <br>
                    <span class="gradient-text">Made Simple</span>
                </h1>
                <p class="text-xl text-slate-300 mb-8 max-w-2xl mx-auto">
                    Unlock the power of satellite imagery with our AI-driven platform. Analyze environmental changes, monitor infrastructure, and gain insights from space-based data with unprecedented accuracy.
                </p>
                <a href="#" onclick="showPage('dashboard-page')" class="gradient-button text-white font-bold py-4 px-12 rounded-full shadow-lg inline-block text-lg font-orbitron">
                    Go to Dashboard
                </a>
            </div>
            
            <!-- Powerful Analysis Tools Section -->
            <div class="w-full max-w-5xl flex flex-col md:flex-row items-center md:items-start justify-center p-8 rounded-3xl card">
                <div class="flex-1 md:pr-8 text-left">
                    <h2 class="text-3xl font-bold text-white mb-6 font-orbitron">
                        Powerful Analysis Tools
                    </h2>
                    <div class="space-y-4">
                        <div class="feature-item">
                            <div class="feature-icon"></div>
                            <span class="text-lg text-slate-200">Before/After Image Comparison</span>
                        </div>
                        <div class="feature-item">
                            <div class="feature-icon"></div>
                            <span class="text-lg text-slate-200">Interactive Map Analysis</span>
                        </div>
                        <div class="feature-item">
                            <div class="feature-icon"></div>
                            <span class="text-lg text-slate-200">AI-Powered Explanations</span>
                        </div>
                    </div>
                </div>
                
                <!-- Placeholder for visual content -->
                <div class="flex-1 mt-8 md:mt-0 p-4 rounded-xl bg-gray-800 bg-opacity-50 flex items-center justify-center min-h-[250px] border border-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-gray-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.5L22 7.5z"></path>
                        <path d="M22 7.5H16V2"></path>
                    </svg>
                </div>
            </div>
        </main>

        <!-- Dashboard Page Content (Hidden by default) -->
        <div id="dashboard-page" class="page-content container mx-auto px-4 md:px-0 py-16">
            <h1 class="text-4xl font-bold text-white mb-8 font-orbitron">Welcome back, khushiarora0606!</h1>
            <p class="text-lg text-slate-300 mb-12">Ready to analyze satellite imagery? Choose your analysis method below.</p>
            
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="card p-6">
                    <p class="text-2xl font-bold">47</p>
                    <p class="text-sm text-slate-400">Analyses Completed</p>
                </div>
                <div class="card p-6">
                    <p class="text-2xl font-bold">2.3s</p>
                    <p class="text-sm text-slate-400">Processing Time</p>
                </div>
                <div class="card p-6">
                    <p class="text-2xl font-bold">94.2%</p>
                    <p class="text-sm text-slate-400">Accuracy Rate</p>
                </div>
                <div class="card p-6">
                    <p class="text-2xl font-bold">12</p>
                    <p class="text-sm text-slate-400">Active Sessions</p>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                <div class="card p-8 flex flex-col justify-between">
                    <div>
                        <h2 class="text-2xl font-bold font-orbitron mb-4">Before/After Analysis</h2>
                        <p class="text-md text-slate-300">Upload two satellite images to detect and analyze changes over time.</p>
                        <ul class="mt-4 list-disc list-inside space-y-2 text-slate-200">
                            <li>Change Detection</li>
                            <li>AI Explanations</li>
                            <li>Visual Comparison</li>
                        </ul>
                    </div>
                    <button onclick="showPage('before-after-page')" class="gradient-button mt-6 self-start text-white font-bold py-3 px-8 rounded-full shadow-lg">
                        Start Analysis &rarr;
                    </button>
                </div>
                <div class="card p-8 flex flex-col justify-between">
                    <div>
                        <h2 class="text-2xl font-bold font-orbitron mb-4">Map-Based Analysis</h2>
                        <p class="text-md text-slate-300">Analyze satellite data for specific locations with interactive mapping.</p>
                        <ul class="mt-4 list-disc list-inside space-y-2 text-slate-200">
                            <li>Location Search</li>
                            <li>Time-based Analysis</li>
                            <li>Interactive Maps</li>
                        </ul>
                    </div>
                    <button onclick="showPage('map-analysis-page')" class="gradient-button mt-6 self-start text-white font-bold py-3 px-8 rounded-full shadow-lg">
                        Start Analysis &rarr;
                    </button>
                </div>
            </div>

        </div>

        <!-- Before/After Page Content (Hidden by default) -->
        <div id="before-after-page" class="page-content container mx-auto px-4 md:px-0 py-16">
            <h1 class="text-4xl font-bold text-white mb-8 font-orbitron">Before/After Image Analysis</h1>
            <p class="text-lg text-slate-300 mb-12">Upload satellite images to detect and analyze changes over time using our classical model.</p>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="card p-8 text-center">
                    <h2 class="text-xl font-semibold mb-4">Before Image</h2>
                    <p class="text-sm text-slate-400 mb-4">Upload a satellite image for before analysis.</p>
                    <div class="border-2 border-dashed border-gray-500 rounded-lg p-12">
                        <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12 text-primary-color" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
                        </svg>
                        <p class="mt-4 text-sm text-slate-400">Drag your image here, or click to browse</p>
                        <button class="mt-4 gradient-button text-white font-bold py-2 px-6 rounded-full shadow-lg">
                            Choose File
                        </button>
                    </div>
                </div>
                <div class="card p-8 text-center">
                    <h2 class="text-xl font-semibold mb-4">After Image</h2>
                    <p class="text-sm text-slate-400 mb-4">Upload a satellite image for after analysis.</p>
                    <div class="border-2 border-dashed border-gray-500 rounded-lg p-12">
                        <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12 text-primary-color" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
                        </svg>
                        <p class="mt-4 text-sm text-slate-400">Drag your image here, or click to browse</p>
                        <button class="mt-4 gradient-button text-white font-bold py-2 px-6 rounded-full shadow-lg">
                            Choose File
                        </button>
                    </div>
                </div>
            </div>
            <div class="flex justify-center mt-8">
                <button class="gradient-button text-white font-bold py-4 px-12 rounded-full shadow-lg text-lg">
                    Analyze Changes
                </button>
            </div>
        </div>

        <!-- Map Analysis Page Content (Hidden by default) -->
        <div id="map-analysis-page" class="page-content container mx-auto px-4 md:px-0 py-16">
            <h1 class="text-4xl font-bold text-white mb-8 font-orbitron">Map-Based Satellite Analysis</h1>
            <p class="text-lg text-slate-300 mb-12">Analyze satellite imagery for specific locations and time periods with our deep learning models.</p>

            <div class="card p-8">
                <h2 class="text-2xl font-bold font-orbitron mb-6">Location & Time Selection</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div>
                        <h3 class="text-lg font-semibold mb-2">Select Location</h3>
                        <div class="relative">
                            <select id="location-select" class="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-700">
                                <option value="" disabled selected>Choose from global locations</option>
                            </select>
                        </div>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold mb-2">Or Enter Custom Location</h3>
                        <input type="text" placeholder="Enter location with coordinates (e.g., New York, 40.7128, -74.0060)" class="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-700">
                        <p class="text-sm text-slate-400 mt-2">Format: City/Location, Latitude, Longitude</p>
                    </div>
                </div>
                
                <div class="mt-8">
                    <h3 class="text-lg font-semibold mb-2">Time Range</h3>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <select id="start-year-select" class="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-700">
                            <option value="" disabled selected>Start Year</option>
                        </select>
                        <select id="start-month-select" class="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-700">
                            <option value="" disabled selected>Start Month</option>
                        </select>
                        <select id="end-year-select" class="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-700">
                            <option value="" disabled selected>End Year</option>
                        </select>
                        <select id="end-month-select" class="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-700">
                            <option value="" disabled selected>End Month</option>
                        </select>
                    </div>
                </div>

                <div class="flex justify-center mt-8">
                    <button class="gradient-button text-white font-bold py-4 px-12 rounded-full shadow-lg text-lg">
                        Analyze Location
                    </button>
                </div>
            </div>
        </div>

        <!-- About Page Content (Hidden by default) -->
        <div id="about-page" class="page-content container mx-auto px-4 md:px-0 py-16">
            <div class="card p-8">
                <div class="flex flex-col items-center text-center mb-8">
                    <div class="w-16 h-16 rounded-full bg-primary-color flex items-center justify-center font-bold text-gray-900 text-3xl mb-4">N</div>
                    <h1 class="text-4xl font-bold font-orbitron">About NanSight</h1>
                    <p class="text-lg text-slate-300 mt-4 max-w-2xl mx-auto">
                        We're a team of passionate engineers and researchers dedicated to making satellite intelligence accessible to everyone through advanced AI technology.
                    </p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
                    <div class="card p-6">
                        <h2 class="text-2xl font-bold font-orbitron mb-2">Our Mission</h2>
                        <p class="text-md text-slate-300">
                            To democratize satellite imagery analysis by providing powerful, AI-driven tools that enable researchers, analysts, and organizations to understand environmental changes and make informed decisions.
                        </p>
                    </div>
                    <div class="card p-6">
                        <h2 class="text-2xl font-bold font-orbitron mb-2">Our Vision</h2>
                        <p class="text-md text-slate-300">
                            A world where satellite intelligence is accessible to all, enabling better environmental monitoring, disaster response, and sustainable development through cutting-edge technology and user-friendly interfaces.
                        </p>
                    </div>
                </div>

                <div class="text-center">
                    <h2 class="text-2xl font-bold font-orbitron mb-6">Technology & Capabilities</h2>
                    <div class="flex flex-wrap justify-center gap-8">
                        <div class="card p-4 flex-grow-0 flex-shrink-0 w-32 text-center">
                            <div class="w-12 h-12 mx-auto bg-primary-color rounded-full mb-2"></div>
                            <p>AI Models</p>
                        </div>
                        <div class="card p-4 flex-grow-0 flex-shrink-0 w-32 text-center">
                            <div class="w-12 h-12 mx-auto bg-primary-color rounded-full mb-2"></div>
                            <p>Data Pipelines</p>
                        </div>
                        <div class="card p-4 flex-grow-0 flex-shrink-0 w-32 text-center">
                            <div class="w-12 h-12 mx-auto bg-primary-color rounded-full mb-2"></div>
                            <p>API Integration</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
        const body = document.body;
        const pages = document.querySelectorAll('.page-content');
        const months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        const locations = ["New York City", "Tokyo", "London", "Sydney", "Dubai", "Rio de Janeiro", "Cairo", "Moscow", "Mumbai"];

        /**
         * Shows the requested page and hides all others.
         * @param {string} pageId The ID of the page to show.
         */
        function showPage(pageId) {
            // Hide all pages
            pages.forEach(page => page.classList.remove('active'));

            // Show the target page
            const targetPage = document.getElementById(pageId);
            if (targetPage) {
                targetPage.classList.add('active');
            }

            // Update the body background based on the page ID
            body.classList.remove('bg-home', 'bg-dashboard', 'bg-before-after', 'bg-map-analysis', 'bg-about');
            if (pageId === 'homepage') {
                body.classList.add('bg-home');
            } else if (pageId === 'dashboard-page') {
                body.classList.add('bg-dashboard');
            } else if (pageId === 'before-after-page') {
                body.classList.add('bg-before-after');
            } else if (pageId === 'map-analysis-page') {
                body.classList.add('bg-map-analysis');
                // Call the function to populate dropdowns when the map analysis page is shown
                populateDropdowns();
            } else if (pageId === 'about-page') {
                body.classList.add('bg-about');
            }
        }

        /**
         * Populates the year, month, and location dropdowns.
         */
        function populateDropdowns() {
            // Get the current year
            const currentYear = new Date().getFullYear();
            const startYearSelect = document.getElementById('start-year-select');
            const endYearSelect = document.getElementById('end-year-select');

            // Clear previous options to prevent duplicates
            startYearSelect.innerHTML = '<option value="" disabled selected>Start Year</option>';
            endYearSelect.innerHTML = '<option value="" disabled selected>End Year</option>';

            // Populate the year dropdowns from 2010 to the current year
            for (let i = 2010; i <= currentYear; i++) {
                const option = document.createElement('option');
                option.value = i;
                option.textContent = i;
                startYearSelect.appendChild(option.cloneNode(true));
                endYearSelect.appendChild(option);
            }

            // Populate the month dropdowns
            const startMonthSelect = document.getElementById('start-month-select');
            const endMonthSelect = document.getElementById('end-month-select');

            // Clear previous options to prevent duplicates
            startMonthSelect.innerHTML = '<option value="" disabled selected>Start Month</option>';
            endMonthSelect.innerHTML = '<option value="" disabled selected>End Month</option>';
            
            months.forEach((month, index) => {
                const option = document.createElement('option');
                option.value = index + 1; // Use 1-based index for month value
                option.textContent = month;
                startMonthSelect.appendChild(option.cloneNode(true));
                endMonthSelect.appendChild(option);
            });

            // Populate the location dropdown
            const locationSelect = document.getElementById('location-select');
            
            // Clear previous options to prevent duplicates
            locationSelect.innerHTML = '<option value="" disabled selected>Choose from global locations</option>';

            locations.forEach(location => {
                const option = document.createElement('option');
                option.value = location;
                option.textContent = location;
                locationSelect.appendChild(option);
            });
        }

        // Initially show the homepage and populate dropdowns
        document.addEventListener('DOMContentLoaded', () => {
            showPage('homepage');
            populateDropdowns();
        });
    </script>
</body>
</html>

index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>NANSAT - Access</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Exo+2:wght@700&family=Manrope:wght@400;700;800&display=swap" rel="stylesheet" />
  <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>

  <!-- Three.js + examples (for postprocessing if needed later) -->
  <script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>
  <script type="importmap">
    {
      "imports": {
        "three": "https://cdn.jsdelivr.net/npm/three@0.157.0/build/three.module.js",
        "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.157.0/examples/jsm/"
      }
    }
  </script>

  <style type="text/tailwindcss">
    :root {
      --dark-blue: #0a192f;
      --light-accent: #64ffda;
      --text-light: #ccd6f6;
      --text-darker: #8892b0;
      --button-bg: #1e3a5f;
      --button-hover-bg: #2a4c7a;
    }
    body {
      font-family: 'Manrope', sans-serif;
      background: radial-gradient(1200px 1200px at 70% 20%, rgba(100,255,218,0.06), transparent 60%),
                  radial-gradient(900px 900px at 10% 80%, rgba(100,255,218,0.04), transparent 60%),
                  #0a192f;
      color: var(--text-light);
      overflow: hidden;
    }
    /* Fullscreen space canvas */
    #bg-canvas {
      position: fixed; inset: 0; width: 100%; height: 100%; z-index: 0;
    }
    .main-content {
      background: rgba(10, 25, 47, 0.85);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border: 1px solid rgba(100, 255, 218, 0.1);
      position: relative; z-index: 2;
    }
    .animated-title {
      font-family: 'Exo 2', sans-serif;
      background: linear-gradient(90deg, var(--text-light), var(--light-accent), var(--text-light));
      background-size: 200% auto;
      -webkit-background-clip: text; background-clip: text; color: transparent;
      animation: text-shine 5s linear infinite;
    }
    @keyframes text-shine { to { background-position: 200% center; } }

    .btn { @apply bg-[var(--button-bg)] text-[var(--text-light)] font-bold py-4 px-6 rounded-full flex items-center justify-center transition-all duration-300 ease-in-out text-lg; }
    .btn:hover { @apply bg-[var(--button-hover-bg)] shadow-[0_0_15px_var(--light-accent)] -translate-y-1; }
    .btn-icon { @apply w-6 h-6 mr-3; filter: drop-shadow(0 0 0 transparent); transition: filter .3s ease; }
    .btn:hover .btn-icon { filter: drop-shadow(0 0 8px var(--light-accent)); }

    /* 3D logo container */
    #logo-container { width: 92px; height: 92px; cursor: grab; position: relative; z-index: 2; }
    #logo-container:active { cursor: grabbing; }

    /* Soft vignette overlay to blend canvas + UI */
    .vignette { position: fixed; inset: 0; z-index: 1; pointer-events: none; background: radial-gradient(circle at 50% 50%, transparent 55%, rgba(0,0,0,0.45) 100%); }
  </style>
</head>

<body class="antialiased">
  <canvas id="bg-canvas"></canvas>
  <div class="vignette"></div>

  <div class="min-h-screen flex flex-col items-center justify-center p-4 relative">
    <div class="w-full max-w-2xl mx-auto text-center main-content p-6 sm:p-10 rounded-2xl shadow-2xl">
      <header class="mb-8">
        <div class="flex justify-center items-center gap-3 sm:gap-5">
          <div id="logo-container"></div>
          <h1 class="animated-title text-5xl sm:text-7xl font-extrabold">NANSAT</h1>
        </div>
        <p class="text-base sm:text-lg text-[var(--light-accent)] mt-2">by Team AetherFlux</p>
      </header>

      <main>
        <p class="text-xl text-[var(--text-darker)] mb-12">Your gateway to satellite insights, anywhere, anytime.</p>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 w-full">
          <a class="btn" href="login.html">
            <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A11.953 11.953 0 0012 13.5c2.998 0 5.74 1.1 7.843 2.918m-15.686 0A8.959 8.959 0 003 12c0-.778.099-1.533.284-2.253m0 0A11.953 11.953 0 0012 10.5c-2.998 0-5.74-1.1-7.843-2.918"/></svg>
            Access Web App
          </a>
          <a class="btn" href="https://1drv.ms/u/c/d848b58d695693b2/EWB6wKa4_ThDkxi_ayuq0BkBRDE4GUhD9xj3yW_mCW6YPQ?e=ZuBANr" target="_blank">
            <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"/></svg>
            Download Android
          </a>
          <a class="btn" href="#" style="cursor: not-allowed; opacity: 0.6;">
            <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H9.75A2.25 2.25 0 007.5 6v12a2.25 2.25 0 002.25 2.25h7.5a2.25 2.25 0 002.25-2.25V9.75m-9 3.75h9"/></svg>
            Get iOS App (Coming Soon)
          </a>
          <a class="btn" href="#" style="cursor: not-allowed; opacity: 0.6;">
            <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"><path d="M20.317,4.369a20.763,20.763,0,0,0-4.885-1.515.074.074,0,0,0-.079.037,13.9,13.9,0,0,0-4.7,2.445,14.34,14.34,0,0,0-4.7-2.445.074.074,0,0,0-.079-.037A20.763,20.763,0,0,0,3.683,4.369a.076.076,0,0,0-.037.079,16.024,16.024,0,0,0,1.949,6.81,15.156,15.156,0,0,0,4.85,4.6,1.36,1.36,0,0,0,.418.2,1.46,1.46,0,0,0,.549.081,1.35,1.35,0,0,0,.418-.2,15.156,15.156,0,0,0,4.85-4.6,16.024,16.024,0,0,0,1.949-6.81.076.076,0,0,0-.037-.079ZM10.02,13.3a1.58,1.58,0,0,1-1.58-1.58,1.58,1.58,0,0,1,1.58-1.58,1.58,1.58,0,0,1,1.58,1.58A1.58,1.58,0,0,1,10.02,13.3Zm3.96,0a1.58,1.58,0,0,1-1.58-1.58,1.58,1.58,0,0,1,1.58-1.58,1.58,1.58,0,0,1,1.58,1.58A1.58,1.58,0,0,1,13.98,13.3Z"/></svg>
            Discord (Coming Soon)
          </a>
        </div>
      </main>
    </div>
  </div>

  <script type="module">
    import * as THREE from 'three';

    // ---------- STARFIELD BACKGROUND ----------
    const bgCanvas = document.getElementById('bg-canvas');
    const bgRenderer = new THREE.WebGLRenderer({ canvas: bgCanvas, antialias: true });
    bgRenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
    bgRenderer.setSize(window.innerWidth, window.innerHeight);

    const bgScene = new THREE.Scene();
    const bgCamera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 2000);
    bgCamera.position.z = 8;

    // Stars
    const starCount = 6000;
    const starPositions = new Float32Array(starCount * 3);
    for (let i = 0; i < starCount * 3; i += 3) {
      const r = 500 + Math.random() * 1400; // spread
      const theta = Math.acos(THREE.MathUtils.randFloatSpread(2));
      const phi = THREE.MathUtils.randFloatSpread(Math.PI * 2);
      starPositions[i]   = r * Math.sin(theta) * Math.cos(phi);
      starPositions[i+1] = r * Math.sin(theta) * Math.sin(phi);
      starPositions[i+2] = r * Math.cos(theta);
    }
    const starGeom = new THREE.BufferGeometry();
    starGeom.setAttribute('position', new THREE.BufferAttribute(starPositions, 3));
    const starMat = new THREE.PointsMaterial({ size: 0.9, sizeAttenuation: true, color: 0x9fd9cc, transparent: true, opacity: 0.9 });
    const starPoints = new THREE.Points(starGeom, starMat);
    bgScene.add(starPoints);

    // Subtle nebula fog
    bgScene.fog = new THREE.FogExp2(0x071522, 0.0006);

    // ---------- LOGO SCENE (EARTH + SATELLITE) ----------
    const logoContainer = document.getElementById('logo-container');
    const logoScene = new THREE.Scene();

    const logoRenderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
    logoRenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
    logoRenderer.setSize(logoContainer.clientWidth, logoContainer.clientHeight);
    logoContainer.appendChild(logoRenderer.domElement);

    const logoCamera = new THREE.PerspectiveCamera(35, logoContainer.clientWidth / logoContainer.clientHeight, 0.1, 100);
    logoCamera.position.set(0, 0, 10);

    // Lights (warm "sun" + ambient fill)
    const ambient = new THREE.AmbientLight(0xffffff, 0.45);
    logoScene.add(ambient);
    const sun = new THREE.DirectionalLight(0xfff1d6, 1.15);
    sun.position.set(6, 3, 4);
    sun.castShadow = false;
    logoScene.add(sun);

    // Textures from threejs examples
    const loader = new THREE.TextureLoader();
    const texBase = 'https://threejs.org/examples/textures/planets/';
    const earthDay = loader.load(texBase + 'earth_atmos_2048.jpg');
    const earthSpec = loader.load(texBase + 'earth_specular_2048.jpg');
    const earthNight = loader.load(texBase + 'earth_lights_2048.png');
    const earthClouds = loader.load(texBase + 'earth_clouds_1024.png');

    // Earth
    const earthGroup = new THREE.Group();
    logoScene.add(earthGroup);

    const earthGeo = new THREE.SphereGeometry(2.6, 64, 64);
    const earthMat = new THREE.MeshPhongMaterial({
      map: earthDay,
      specularMap: earthSpec,
      specular: new THREE.Color(0x222222),
      shininess: 12
    });
    const earthMesh = new THREE.Mesh(earthGeo, earthMat);
    earthGroup.add(earthMesh);

    // City lights (slightly larger sphere with additive blend)
    const lightsGeo = new THREE.SphereGeometry(2.601, 64, 64);
    const lightsMat = new THREE.MeshBasicMaterial({ map: earthNight, blending: THREE.AdditiveBlending, transparent: true, opacity: 0.85 });
    const lightsMesh = new THREE.Mesh(lightsGeo, lightsMat);
    earthGroup.add(lightsMesh);

    // Clouds
    earthClouds.wrapS = earthClouds.wrapT = THREE.RepeatWrapping;
    const cloudGeo = new THREE.SphereGeometry(2.68, 64, 64);
    const cloudMat = new THREE.MeshPhongMaterial({ map: earthClouds, transparent: true, opacity: 0.45, depthWrite: false });
    const cloudMesh = new THREE.Mesh(cloudGeo, cloudMat);
    earthGroup.add(cloudMesh);

    // Atmospheric glow (Fresnel shader)
    const atmosphereGeo = new THREE.SphereGeometry(2.78, 64, 64);
    const atmosphereMat = new THREE.ShaderMaterial({
      transparent: true,
      depthWrite: false,
      blending: THREE.AdditiveBlending,
      uniforms: { c: { value: 0.6 }, p: { value: 3.2 }, glowColor: { value: new THREE.Color(0x64ffda) }, viewVector: { value: new THREE.Vector3(0,0,10) } },
      vertexShader: `
        uniform vec3 viewVector; uniform float c; uniform float p; varying float intensity;
        void main(){ vec3 vNormal = normalize(normalMatrix * normal);
          vec3 vNormel = normalize(normalMatrix * viewVector);
          intensity = pow(c - dot(vNormal, vNormel), p);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,
      fragmentShader: `
        uniform vec3 glowColor; varying float intensity;
        void main(){ gl_FragColor = vec4(glowColor, 1.0) * intensity; }
      `
    });
    const atmosphere = new THREE.Mesh(atmosphereGeo, atmosphereMat);
    earthGroup.add(atmosphere);

    // Satellite
    const satelliteGroup = new THREE.Group();

    const body = new THREE.Mesh(
      new THREE.BoxGeometry(0.5, 0.5, 0.7),
      new THREE.MeshStandardMaterial({ color: 0xbfc5ce, metalness: 0.7, roughness: 0.35 })
    );
    const panelMat = new THREE.MeshStandardMaterial({ color: 0x1a73e8, metalness: 0.2, roughness: 0.5, emissive: 0x081a44, emissiveIntensity: 0.6 });
    const panel1 = new THREE.Mesh(new THREE.PlaneGeometry(1.8, 0.6), panelMat);
    const panel2 = new THREE.Mesh(new THREE.PlaneGeometry(1.8, 0.6), panelMat);
    panel1.position.x = 1.35; panel2.position.x = -1.35; panel1.rotation.y = Math.PI; // make both double-sided visually
    const boom = new THREE.Mesh(new THREE.CylinderGeometry(0.05, 0.05, 0.9, 12), new THREE.MeshStandardMaterial({ color: 0x9aa3ad, metalness: 0.8, roughness: 0.2 }));
    boom.rotation.z = Math.PI / 2; boom.position.z = -0.5;

    satelliteGroup.add(body, panel1, panel2, boom);

    const orbitRadius = 4.2;
    const orbitTilt = 0.41; // ~23.5deg is earth tilt; use separate for orbit aesthetics

    const orbit = new THREE.Object3D();
    orbit.rotation.set(orbitTilt, 0.2, 0.1);
    logoScene.add(orbit);

    const satPivot = new THREE.Object3D();
    satPivot.position.set(0, 0, 0);
    orbit.add(satPivot);

    satelliteGroup.position.set(orbitRadius, 0, 0);
    satPivot.add(satelliteGroup);

    // Orbit path (thin line)
    const circlePts = [];
    const segs = 128;
    for (let i = 0; i <= segs; i++) {
      const a = (i / segs) * Math.PI * 2;
      circlePts.push(new THREE.Vector3(Math.cos(a) * orbitRadius, 0, Math.sin(a) * orbitRadius));
    }
    const orbitGeo = new THREE.BufferGeometry().setFromPoints(circlePts);
    const orbitLine = new THREE.LineLoop(orbitGeo, new THREE.LineBasicMaterial({ color: 0x365d74, transparent: true, opacity: 0.7 }));
    orbit.add(orbitLine);

    // --------- INTERACTION (drag to rotate, with inertia) ---------
    let isDragging = false;
    let lastX = 0, lastY = 0;
    let velocityX = 0, velocityY = 0;

    const onDown = (e) => {
      isDragging = true;
      const t = e.touches ? e.touches[0] : e;
      lastX = t.clientX; lastY = t.clientY;
    };
    const onMove = (e) => {
      if (!isDragging) return;
      const t = e.touches ? e.touches[0] : e;
      const dx = (t.clientX - lastX) * 0.005;
      const dy = (t.clientY - lastY) * 0.005;
      earthGroup.rotation.y += dx;
      earthGroup.rotation.x += dy;
      lastX = t.clientX; lastY = t.clientY;
      velocityX = dx; velocityY = dy;
    };
    const onUp = () => { isDragging = false; };

    logoContainer.addEventListener('mousedown', onDown);
    window.addEventListener('mousemove', onMove);
    window.addEventListener('mouseup', onUp);
    logoContainer.addEventListener('touchstart', onDown, { passive: true });
    window.addEventListener('touchmove', onMove, { passive: true });
    window.addEventListener('touchend', onUp);

    // Button hover -> subtle pulse
    let pulse = 0;
    const buttons = document.querySelectorAll('.btn');
    buttons.forEach(btn => {
      btn.addEventListener('mouseenter', () => { pulse = 0.015; });
      btn.addEventListener('mouseleave', () => { pulse = 0.0; });
    });

    // ---------- ANIMATION LOOP ----------
    const clock = new THREE.Clock();

    function animate(){
      requestAnimationFrame(animate);
      const t = clock.getElapsedTime();

      // Starfield slow parallax
      starPoints.rotation.y += 0.0002;
      starPoints.rotation.x += 0.0001;

      // Earth base rotation + inertia decay
      earthGroup.rotation.y += 0.003 + velocityX * 0.95;
      earthGroup.rotation.x += 0.0003 + velocityY * 0.95;
      velocityX *= 0.92; velocityY *= 0.92;

      // Clouds drift
      cloudMesh.rotation.y += 0.0012;

      // Satellite orbit
      satPivot.rotation.y = t * 0.8; // angular speed
      satelliteGroup.lookAt(earthGroup.position);

      // Soft breathing scale on interaction
      const s = 1 + Math.sin(t * 3.2) * pulse;
      earthMesh.scale.setScalar(s);
      lightsMesh.scale.setScalar(s);
      cloudMesh.scale.setScalar(s * 1.002);
      atmosphere.scale.setScalar(s * 1.005);

      // Atmosphere view vector update
      atmosphere.material.uniforms.viewVector.value = new THREE.Vector3().subVectors(logoCamera.position, atmosphere.position);

      // Render both scenes
      bgRenderer.render(bgScene, bgCamera);
      logoRenderer.render(logoScene, logoCamera);
    }
    animate();

    // ---------- RESIZE ----------
    function onResize(){
      // background
      bgCamera.aspect = window.innerWidth / window.innerHeight;
      bgCamera.updateProjectionMatrix();
      bgRenderer.setSize(window.innerWidth, window.innerHeight);

      // logo
      const w = logoContainer.clientWidth, h = logoContainer.clientHeight;
      logoCamera.aspect = w / h; logoCamera.updateProjectionMatrix();
      logoRenderer.setSize(w, h);
    }
    window.addEventListener('resize', onResize);
  </script>
</body>
</html>

login.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NANSAT - Login</title>
    <!-- Google Fonts: Orbitron for headings, Inter for body text -->
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;600;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <!-- Tailwind CSS via CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --bg-color-start: #0a192f;
            --bg-color-end: #1a263a;
            --card-bg-dark: rgba(10, 25, 47, 0.85);
            --text-light: #e6f1ff;
            --primary-color: #64ffda;
            --accent-blue: #1e90ff;
            --accent-cyan: #00bcd4;
            --accent-glow: #64ffda;
        }

        body {
            font-family: 'Inter', sans-serif;
            color: var(--text-light);
            background-color: #0a081a;
            background-image: url('background.jpg'); /* Replace with your background image */
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            position: relative; /* Needed for the overlay */
        }

        /* Dark overlay for better text readability */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1;
        }
        
        /* Custom scrollbar for webkit browsers */
        ::-webkit-scrollbar {
            height: 8px;
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--card-bg-dark);
            border-radius: 9999px;
        }

        ::-webkit-scrollbar-thumb {
            background-color: var(--primary-color);
            border-radius: 9999px;
            border: 2px solid var(--card-bg-dark);
        }
        
        .login-card {
            z-index: 10;
            background: var(--card-bg-dark);
            backdrop-filter: blur(8px);
            border: 1.5px solid var(--primary-color);
            box-shadow: 0 0 24px 0 rgba(100,255,218,0.12);
            transition: all 0.3s ease;
        }
        .login-card:hover {
            box-shadow: 0 0 36px 0 rgba(100,255,218,0.25), 0 0 10px var(--accent-blue);
        }

        .gradient-button {
            background: linear-gradient(90deg, var(--primary-color), var(--accent-blue), var(--accent-cyan));
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px 0 rgba(100,255,218,0.18);
        }
        .gradient-button:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 8px 24px 0 rgba(30,144,255,0.25);
        }
        
        /* Input field styling */
        .login-input {
            width: 100%;
            padding: 12px;
            border-radius: 0.5rem;
            border: 1.5px solid var(--accent-blue);
            background-color: rgba(26, 32, 54, 0.8);
            color: var(--text-light);
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }
        .login-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 10px var(--primary-color);
        }

        /* --- Loading Overlay and Animation --- */
        #loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #0a081a;
            background-image: url('http://googleusercontent.com/file_content/8');
            background-size: cover;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            z-index: 1000;
            opacity: 1;
            transition: opacity 1s ease-in-out, visibility 1s;
        }

        #loading-overlay.hidden {
            opacity: 0;
            visibility: hidden;
        }

        .satellite-container {
            width: 100px;
            height: 100px;
            position: relative;
        }

        .satellite {
            width: 100%;
            height: 100%;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%2300e0e0'%3E%3Cpath d='M12 2a10 10 0 000 20c5.523 0 10-4.477 10-10S17.523 2 12 2zm0 18a8 8 0 110-16 8 8 0 010 16z'/%3E%3Cpath d='M12 11a1 1 0 01-1-1V5a1 1 0 112 0v5a1 1 0 01-1 1z'/%3E%3Cpath d='M12 13a1 1 0 01-1-1v-5a1 1 0 112 0v5a1 1 0 01-1 1z' transform='rotate(45 12 12)'/%3E%3Cpath d='M12 13a1 1 0 01-1-1v-5a1 1 0 112 0v5a1 1 0 01-1 1z' transform='rotate(90 12 12)'/%3E%3Cpath d='M12 13a1 1 0 01-1-1v-5a1 1 0 112 0v5a1 1 0 01-1 1z' transform='rotate(135 12 12)'/%3E%3C/svg%3E");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            animation: move-satellite 6s infinite ease-in-out;
            filter: drop-shadow(0 0 10px var(--primary-color));
        }

        @keyframes move-satellite {
            0% { transform: translateY(0) translateX(-100vw) scale(0.5); opacity: 0; }
            5% { transform: translateY(0) translateX(-80vw) scale(0.5); opacity: 1; }
            50% { transform: translateY(-50px) translateX(0) scale(1); opacity: 1; }
            95% { transform: translateY(0) translateX(80vw) scale(0.5); opacity: 1; }
            100% { transform: translateY(0) translateX(100vw) scale(0.5); opacity: 0; }
        }

        /* Custom Modal for Alerts */
        .modal {
            display: none;
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.7);
        }

        .modal-content {
            background-color: rgba(34, 30, 63, 0.9);
            margin: 15% auto;
            padding: 24px;
            border-radius: 1rem;
            width: 80%;
            max-width: 400px;
            box-shadow: 0 0 20px rgba(0, 224, 224, 0.4);
            text-align: center;
            border: 1px solid var(--primary-color);
        }

        .close-button {
            color: var(--text-light);
            float: right;
            font-size: 28px;
            font-weight: bold;
            text-shadow: 0 0 5px var(--primary-color);
        }

        .close-button:hover,
        .close-button:focus {
            color: var(--primary-color);
            text-decoration: none;
            cursor: pointer;
        }

    </style>
</head>
<body class="antialiased">

    <!-- Loading Overlay -->
    <div id="loading-overlay">
        <div class="satellite-container">
            <div class="satellite"></div>
        </div>
        <p class="mt-8 text-2xl font-bold font-orbitron text-primary-color animate-pulse">Loading NANSAT...</p>
    </div>

    <!-- Login Form Container -->
    <div id="login-container" class="hidden relative p-8 rounded-3xl login-card max-w-sm w-full mx-4 md:mx-auto">
        <h2 class="text-4xl font-bold text-center text-white mb-8 font-orbitron">
            <span class="text-primary-color">NANSAT</span>
        </h2>
        <h3 class="text-xl font-semibold text-center text-[var(--accent-blue)] mb-8 font-inter">Sign in to your account</h3>
        <form id="loginForm" class="space-y-6">
            <div>
                <label for="username" class="block text-sm font-medium text-[var(--accent-blue)] mb-1">Username or Email</label>
                <input type="text" id="username" name="username" class="login-input" required>
            </div>
            <div>
                <label for="password" class="block text-sm font-medium text-[var(--accent-blue)] mb-1">Password</label>
                <input type="password" id="password" name="password" class="login-input" required>
            </div>
            <button type="submit" class="gradient-button text-white font-bold py-3 px-8 rounded-full shadow-lg block w-full text-center font-orbitron">
                Login
            </button>
        </form>
        <div class="mt-6 text-center flex flex-col gap-2">
            <a href="#" class="text-sm font-semibold text-primary-color hover:underline transition-colors duration-300">Forgot Password?</a>
            <a href="/register.html" class="text-sm font-semibold text-[var(--accent-blue)] hover:underline transition-colors duration-300">Don't have an account? Sign Up</a>
            <a href="/" class="text-xs font-semibold text-[var(--accent-cyan)] hover:underline transition-colors duration-300 mt-2">Back to Access Page</a>
        </div>
    </div>
    
    <!-- Custom Modal for Alerts -->
    <div id="customModal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal()">&times;</span>
            <p id="modalMessage" class="text-lg font-semibold"></p>
        </div>
    </div>

    <script>
        // Function to show a custom modal with a message
        const showModal = (message) => {
            const modal = document.getElementById('customModal');
            const modalMessage = document.getElementById('modalMessage');
            modalMessage.textContent = message;
            modal.style.display = "block";
        }

        // Function to close the custom modal
        const closeModal = () => {
            const modal = document.getElementById('customModal');
            modal.style.display = "none";
        }

        // Close the modal if the user clicks outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('customModal');
            if (event.target == modal) {
                closeModal();
            }
        }

        // Handle the login form submission
        document.getElementById('loginForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            if (!username || !password) {
                showModal('Please enter both username and password.');
                return;
            }

            try {
                const response = await fetch("http://127.0.0.1:8000/token", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: new URLSearchParams({
                        username: username,
                        password: password
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    console.log("JWT token:", data.access_token);

                    // Store token in localStorage for future API requests
                    localStorage.setItem("access_token", data.access_token);

                    // Redirect to home.html
                    window.location.href = "home.html";
                } else {
                    const errData = await response.json();
                    showModal(errData.detail || 'Login failed. Please check credentials.');
                }
            } catch (error) {
                console.error("Error:", error);
                showModal('Error connecting to server.');
            }
        });
        
        // Function to hide the loading overlay and show the login form
        const hideLoadingOverlay = () => {
            const loadingOverlay = document.getElementById('loading-overlay');
            const loginContainer = document.getElementById('login-container');
            
            // Hide the loading overlay with a fade-out effect
            loadingOverlay.classList.add('hidden');
            
            // Show the login container after the fade-out transition
            setTimeout(() => {
                loginContainer.classList.remove('hidden');
                loginContainer.classList.add('animate-fadeIn');
            }, 1000); // Corresponds to the transition duration
        };

        // Initial render on page load
        window.onload = () => {
            // Simulate a loading time before hiding the overlay
            setTimeout(() => {
                hideLoadingOverlay();
            }, 3000); // 3-second delay
        };

    </script>
</body>
</html>

    </script>
</body>
</html>

register.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NANSAT - Register</title>
    <!-- Google Fonts: Orbitron for headings, Inter for body text -->
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;600;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <!-- Tailwind CSS via CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --bg-color-start: #0a192f;
            --bg-color-end: #1a263a;
            --card-bg-dark: rgba(10, 25, 47, 0.85);
            --text-light: #e6f1ff;
            --primary-color: #64ffda;
            --accent-blue: #1e90ff;
            --accent-cyan: #00bcd4;
            --accent-glow: #64ffda;
        }

        body {
            font-family: 'Inter', sans-serif;
            color: var(--text-light);
            background-color: #0a081a;
            background-image: url('image.png'); /* Background image */
            background-position: center;
            background-attachment: fixed;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            position: relative; /* Needed for the overlay */
        }

        /* Dark overlay for better text readability */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1;
        }
        
        /* Custom scrollbar for webkit browsers */
        ::-webkit-scrollbar {
            height: 8px;
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--card-bg-dark);
            border-radius: 9999px;
        }

        ::-webkit-scrollbar-thumb {
            background-color: var(--primary-color);
            border-radius: 9999px;
            border: 2px solid var(--card-bg-dark);
        }
        
        .login-card {
            z-index: 10;
            background: var(--card-bg-dark);
            backdrop-filter: blur(8px);
            border: 1.5px solid var(--primary-color);
            box-shadow: 0 0 24px 0 rgba(100,255,218,0.12);
            transition: all 0.3s ease;
        }
        .login-card:hover {
            box-shadow: 0 0 36px 0 rgba(100,255,218,0.25), 0 0 10px var(--accent-blue);
        }

        .gradient-button {
            background: linear-gradient(90deg, var(--primary-color), var(--accent-blue), var(--accent-cyan));
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px 0 rgba(100,255,218,0.18);
        }
        .gradient-button:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 8px 24px 0 rgba(30,144,255,0.25);
        }
        
        /* Input field styling */
        .login-input {
            width: 100%;
            padding: 12px;
            border-radius: 0.5rem;
            border: 1.5px solid var(--accent-blue);
            background-color: rgba(26, 32, 54, 0.8);
            color: var(--text-light);
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }
        .login-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 10px var(--primary-color);
        }

        /* --- Loading Overlay and Animation --- */
        #loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #0a081a;
            background-image: url('http://googleusercontent.com/file_content/uploaded:image_655a67.jpg-9ad605f9-cc02-447d-ba65-048e247b9a78');
            background-size: cover;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            z-index: 1000;
            opacity: 1;
            transition: opacity 1s ease-in-out, visibility 1s;
        }

        #loading-overlay.hidden {
            opacity: 0;
            visibility: hidden;
        }

        .satellite-container {
            width: 100px;
            height: 100px;
            position: relative;
        }

        .satellite {
            width: 100%;
            height: 100%;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%2300e0e0'%3E%3Cpath d='M12 2a10 10 0 000 20c5.523 0 10-4.477 10-10S17.523 2 12 2zm0 18a8 8 0 110-16 8 8 0 010 16z'/%3E%3Cpath d='M12 11a1 1 0 01-1-1V5a1 1 0 112 0v5a1 1 0 01-1 1z'/%3E%3Cpath d='M12 13a1 1 0 01-1-1v-5a1 1 0 112 0v5a1 1 0 01-1 1z' transform='rotate(45 12 12)'/%3E%3Cpath d='M12 13a1 1 0 01-1-1v-5a1 1 0 112 0v5a1 1 0 01-1 1z' transform='rotate(90 12 12)'/%3E%3Cpath d='M12 13a1 1 0 01-1-1v-5a1 1 0 112 0v5a1 1 0 01-1 1z' transform='rotate(135 12 12)'/%3E%3C/svg%3E");
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            animation: move-satellite 6s infinite ease-in-out;
            filter: drop-shadow(0 0 10px var(--primary-color));
        }

        @keyframes move-satellite {
            0% { transform: translateY(0) translateX(-100vw) scale(0.5); opacity: 0; }
            5% { transform: translateY(0) translateX(-80vw) scale(0.5); opacity: 1; }
            50% { transform: translateY(-50px) translateX(0) scale(1); opacity: 1; }
            95% { transform: translateY(0) translateX(80vw) scale(0.5); opacity: 1; }
            100% { transform: translateY(0) translateX(100vw) scale(0.5); opacity: 0; }
        }

        /* Custom Modal for Alerts */
        .modal {
            display: none;
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.7);
        }

        .modal-content {
            background-color: rgba(34, 30, 63, 0.9);
            margin: 15% auto;
            padding: 24px;
            border-radius: 1rem;
            width: 80%;
            max-width: 400px;
            box-shadow: 0 0 20px rgba(0, 224, 224, 0.4);
            text-align: center;
            border: 1px solid var(--primary-color);
        }

        .close-button {
            color: var(--text-light);
            float: right;
            font-size: 28px;
            font-weight: bold;
            text-shadow: 0 0 5px var(--primary-color);
        }

        .close-button:hover,
        .close-button:focus {
            color: var(--primary-color);
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="antialiased">

    <!-- Loading Overlay -->
    <div id="loading-overlay">
        <div class="satellite-container">
            <div class="satellite"></div>
        </div>
        <p class="mt-8 text-2xl font-bold font-orbitron text-primary-color animate-pulse">Loading NANSAT...</p>
    </div>

    <!-- Registration Form Container -->
    <div id="register-container" class="hidden relative p-8 rounded-3xl login-card max-w-sm w-full mx-4 md:mx-auto">
        <h2 class="text-4xl font-bold text-center text-white mb-8 font-orbitron">
            <span class="text-primary-color">NANSAT</span>
        </h2>
        <h3 class="text-xl font-semibold text-center text-[var(--accent-blue)] mb-8 font-inter">Create a new account</h3>
        <form id="registerForm" class="space-y-6">
            <div>
                <label for="name" class="block text-sm font-medium text-[var(--accent-blue)] mb-1">Full Name</label>
                <input type="text" id="name" name="name" class="login-input" required>
            </div>
            <div>
                <label for="email" class="block text-sm font-medium text-[var(--accent-blue)] mb-1">Email Address</label>
                <input type="email" id="email" name="email" class="login-input" required>
            </div>
            <div>
                <label for="password" class="block text-sm font-medium text-[var(--accent-blue)] mb-1">Password</label>
                <input type="password" id="password" name="password" class="login-input" required>
            </div>
            <button type="submit" class="gradient-button text-white font-bold py-3 px-8 rounded-full shadow-lg block w-full text-center font-orbitron">
                Sign Up
            </button>
        </form>
        <div class="mt-6 text-center flex flex-col gap-2">
            <a href="/login.html" class="text-sm font-semibold text-[var(--accent-blue)] hover:underline transition-colors duration-300">Already have an account? Log in</a>
            <a href="/" class="text-xs font-semibold text-[var(--accent-cyan)] hover:underline transition-colors duration-300 mt-2">Back to Access Page</a>
        </div>
    </div>
    
    <!-- Custom Modal for Alerts -->
    <div id="customModal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeModal()">&times;</span>
            <p id="modalMessage" class="text-lg font-semibold"></p>
        </div>
    </div>

    <script>
        // Function to show a custom modal with a message
        const showModal = (message) => {
            const modal = document.getElementById('customModal');
            const modalMessage = document.getElementById('modalMessage');
            modalMessage.textContent = message;
            modal.style.display = "block";
        }

        // Function to close the custom modal
        const closeModal = () => {
            const modal = document.getElementById('customModal');
            modal.style.display = "none";
        }

        // Close the modal if the user clicks outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('customModal');
            if (event.target == modal) {
                closeModal();
            }
        }

        // Handle the registration form submission
        document.getElementById('registerForm').addEventListener('submit', async function(event) {
    event.preventDefault();

    const name = document.getElementById('name').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value;

    try {
        const response = await fetch("http://127.0.0.1:8000/register", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ name, email, password })
        });

        const data = await response.json();

        if (response.ok) {
            // Show success message
            alert(data.message);

            // Redirect to login.html after 1 second
            setTimeout(() => {
                window.location.href = "login.html";
            }, 1000);
        } else {
            alert(data.detail || "Registration failed");
        }
    } catch (error) {
        console.error(error);
        alert("Error connecting to server");
    }
});

        
        // Function to hide the loading overlay and show the registration form
        const hideLoadingOverlay = () => {
            const loadingOverlay = document.getElementById('loading-overlay');
            const registerContainer = document.getElementById('register-container');
            
            // Hide the loading overlay with a fade-out effect
            loadingOverlay.classList.add('hidden');
            
            // Show the registration container after the fade-out transition
            setTimeout(() => {
                registerContainer.classList.remove('hidden');
                registerContainer.classList.add('animate-fadeIn');
            }, 1000); // Corresponds to the transition duration
        };

        // Initial render on page load
        window.onload = () => {
            // Simulate a loading time before hiding the overlay
            setTimeout(() => {
                hideLoadingOverlay();
            }, 3000); // 3-second delay
        };

    </script>
</body>
</html>
